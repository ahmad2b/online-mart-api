version: "0.1.0"
name: online-mart-api
services:
  user-service:
    build:
      context: ./user
      dockerfile: Dockerfile.dev
    volumes:
      - ./user:/code
    depends_on:
      - postgres-user
      - broker
    ports:
      - "8001:8000"
    networks:
      - backend

  product-service:
    build:
      context: ./product
      dockerfile: Dockerfile.dev
    volumes:
      - ./product:/code
    depends_on:
      - postgres-product
      - broker
    ports:
      - "8002:8000"
    networks:
      - backend

  order-service:
    build:
      context: ./order
      dockerfile: Dockerfile.dev
    volumes:
      - ./order:/code
    depends_on:
      - postgres-order
      - broker
    ports:
      - "8003:8000"
    networks:
      - backend

  inventory-service:
    build:
      context: ./inventory
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory:/code
    depends_on:
      - postgres-inventory
      - broker
    ports:
      - "8004:8000"
    networks:
      - backend

  notification-service:
    build:
      context: ./notification
      dockerfile: Dockerfile.dev
    volumes:
      - ./notification:/code
    depends_on:
      - postgres-notification
      - broker
    ports:
      - "8005:8000"
    networks:
      - backend

  payment-service:
    build:
      context: ./payment
      dockerfile: Dockerfile.dev
    volumes:
      - ./payment:/code
    depends_on:
      - postgres-payment
      - broker
    ports:
      - "8006:8000"
    networks:
      - backend

  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile.dev
    volumes:
      - ./auth:/code
    depends_on:
      - postgres-auth
      - broker
    ports:
      - "8007:8000"
    networks:
      - backend

  cart-service:
    build:
      context: ./cart
      dockerfile: Dockerfile.dev
    volumes:
      - ./cart:/code
    depends_on:
      - postgres-cart
      - broker
    ports:
      - "8008:8000"
    networks:
      - backend

  postgres-user:
    image: postgres:latest
    container_name: postgres-user
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-product:
    image: postgres:latest
    container_name: postgres-product
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_product_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-order:
    image: postgres:latest
    container_name: postgres-order
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-inventory:
    image: postgres:latest
    container_name: postgres-inventory
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-payment:
    image: postgres:latest
    container_name: postgres-payment
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    volumes:
      - postgres_payment_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-notification:
    image: postgres:latest
    container_name: postgres-notification
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5438:5432"
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-auth:
    image: postgres:latest
    container_name: postgres-auth
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5439:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - backend

  postgres-cart:
    image: postgres:latest
    container_name: postgres-cart
    environment:
      POSTGRES_DB: cartdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5440:5432"
    volumes:
      - postgres_cart_data:/var/lib/postgresql/data
    networks:
      - backend

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
    networks:
      - backend

volumes:
  postgres_user_data:
    driver: local
  postgres_product_data:
    driver: local
  postgres_order_data:
    driver: local
  postgres_inventory_data:
    driver: local
  postgres_payment_data:
    driver: local
  postgres_notification_data:
    driver: local
  postgres_auth_data:
    driver: local
  postgres_db:
    driver: local
  postgres_cart_data:
    driver: local

networks:
  backend:
    driver: bridge
